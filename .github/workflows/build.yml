# Basic workflow
name: build

# Controls when the action will run
# Workflow begins with push or PR events
# Focuses on the master branch only
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Create one single job
# This job performs all necessary checks
jobs:
  build:
    # Use the latest version of Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Performs all actions on different versions of Python
        python-version: ["3.11"]
    # Define the workflow steps
    steps:
    # Checkout the code of the repository
        - name: Check out Repository Code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        # Run the mdl linting tool
        # Refers to .mdlrc file in repository
        - name: Run Markdown Linting
          uses: actionshub/markdownlint@main
        # Setup Python for the current language version
        - name: Setup Python ${{ matrix.python-version }}
          if: always()
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        # Install pip
        - name: Install Pip
          if: always()
          run: |
            pip install -U pip
        # Install poetry
        - name: Install Poetry
          if: always()
          uses: abatilo/actions-poetry@v2.0.0
          with:
            poetry-version: 1.6.1
        # Run the Python program
        - name: Run Python Program
          if: always()
          run: |
            cd objectprocessor
            poetry install
            poetry run objectprocessor --search-term john79 --attribute email --input-file input/people.txt --output-file output/people.txt
        # Run GatorGrader: see config/gatorgrade.yml
        - name: Run GatorGrader with GatorGrade
          if: always()
          run:  |
            pip install gatorgrade
            # Note: this is the standard approach that
            # would not create the GitHub job summary
            # gatorgrade --config config/gatorgrade.yml
            gatorgrade --config config/gatorgrade.yml --report env md GITHUB_STEP_SUMMARY
